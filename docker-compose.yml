version: "3.8"

services:
  db:
    image: postgres:15
    container_name: postgres_db
    restart: always
    env_file:
      - .env
    ports:
      - "5432:5432"
    volumes:
      - postgres_data:/var/lib/postgresql/data

  redis:
    image: redis:latest
    container_name: redis_cache
    restart: always
    ports:
      - "6379:6379"

  backend:
    build:
      context: ./backend
    container_name: django_backend
    restart: always
    env_file:
      - ./backend/backend/.env
    depends_on:
      - db
      - redis
    ports:
      - "8000:8000"
    volumes:
      - ./backend:/app

  celery:
    build:
      context: ./backend
    container_name: celery_worker
    restart: always
    command: celery -A backend worker --loglevel=info
    depends_on:
      - backend
      - redis
    env_file:
      - ./backend/backend/.env
    volumes:
      - ./backend:/app

  celery-beat:
    build:
      context: ./backend
    container_name: celery_beat
    restart: always
    command: celery -A backend beat --loglevel=info
    depends_on:
      - backend
      - redis
      - celery
    env_file:
      - ./backend/backend/.env
    volumes:
      - ./backend:/app

  frontend:
    build:
      context: ./frontend
    container_name: react_frontend
    restart: always
    ports:
      - "3000:3000"
    volumes:
      - ./frontend:/app
      - /app/node_modules

  nginx:
    image: nginx:latest
    container_name: nginx_proxy
    restart: always
    ports:
      - "80:80"
    depends_on:
      - frontend
      - backend
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf
      - ./backend/static:/static
      - ./backend/media:/media

volumes:
  postgres_data:
